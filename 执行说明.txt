实现多个重要的内核编程概念：
1，系统调用拦截 - 使用kprobes技术拦截fork/exit系统调用
2，内核数据结构 - 使用链表管理进程记录
3，并发控制 - 使用自旋锁保护共享数据
4，proc文件系统 - 提供用户态访问接口
5，内存管理 - 动态分配和LRU策略
6，错误处理 - 完善的错误检查和恢复机制实现多个重要的内核编程概念：
1，系统调用拦截 - 使用kprobes技术拦截fork/exit系统调用
2，内核数据结构 - 使用链表管理进程记录
3，并发控制 - 使用自旋锁保护共享数据
4，proc文件系统 - 提供用户态访问接口
5，内存管理 - 动态分配和LRU策略


执行步骤
cd experiments

实验1执行  ./simple_run_01.sh
实验2执行  ./simple_run_02.sh
实验3执行  ./simple_run_03.sh
实验4执行  ./simple_run_04.sh
实验5执行  ./simple_run_05.sh
